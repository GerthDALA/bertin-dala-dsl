/*
 * generated by Xtext 2.36.0
 */
grammar InternalBrowser;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.imt.bertin.dala.project.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.imt.bertin.dala.project.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.imt.bertin.dala.project.services.BrowserGrammarAccess;

}

@parser::members {

 	private BrowserGrammarAccess grammarAccess;

    public InternalBrowserParser(TokenStream input, BrowserGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected BrowserGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_0());
			}
			lv_statements_0_0=ruleStatement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"statements",
					lv_statements_0_0,
					"fr.imt.bertin.dala.project.Browser.Statement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getOpenUrlParserRuleCall_0());
		}
		this_OpenUrl_0=ruleOpenUrl
		{
			$current = $this_OpenUrl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getClickLinkParserRuleCall_1());
		}
		this_ClickLink_1=ruleClickLink
		{
			$current = $this_ClickLink_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getClickImageParserRuleCall_2());
		}
		this_ClickImage_2=ruleClickImage
		{
			$current = $this_ClickImage_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getVerifyLinkParserRuleCall_3());
		}
		this_VerifyLink_3=ruleVerifyLink
		{
			$current = $this_VerifyLink_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getFillTextParserRuleCall_4());
		}
		this_FillText_4=ruleFillText
		{
			$current = $this_FillText_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getClickButtonParserRuleCall_5());
		}
		this_ClickButton_5=ruleClickButton
		{
			$current = $this_ClickButton_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getVerifyTextParserRuleCall_6());
		}
		this_VerifyText_6=ruleVerifyText
		{
			$current = $this_VerifyText_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSelectOptionParserRuleCall_7());
		}
		this_SelectOption_7=ruleSelectOption
		{
			$current = $this_SelectOption_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getUncheckAllCheckboxesParserRuleCall_8());
		}
		ruleUncheckAllCheckboxes
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getCheckCheckboxesParserRuleCall_9());
		}
		this_CheckCheckboxes_9=ruleCheckCheckboxes
		{
			$current = $this_CheckCheckboxes_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSaveLinkParserRuleCall_10());
		}
		this_SaveLink_10=ruleSaveLink
		{
			$current = $this_SaveLink_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOpenUrl
entryRuleOpenUrl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpenUrlRule()); }
	iv_ruleOpenUrl=ruleOpenUrl
	{ $current=$iv_ruleOpenUrl.current; }
	EOF;

// Rule OpenUrl
ruleOpenUrl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='OPEN_URL'
		{
			newLeafNode(otherlv_0, grammarAccess.getOpenUrlAccess().getOPEN_URLKeyword_0());
		}
		(
			(
				lv_url_1_0=RULE_STRING
				{
					newLeafNode(lv_url_1_0, grammarAccess.getOpenUrlAccess().getUrlSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOpenUrlRule());
					}
					setWithLastConsumed(
						$current,
						"url",
						lv_url_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleClickLink
entryRuleClickLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClickLinkRule()); }
	iv_ruleClickLink=ruleClickLink
	{ $current=$iv_ruleClickLink.current; }
	EOF;

// Rule ClickLink
ruleClickLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CLICK_LINK'
		{
			newLeafNode(otherlv_0, grammarAccess.getClickLinkAccess().getCLICK_LINKKeyword_0());
		}
		(
			(
				lv_linkText_1_0=RULE_STRING
				{
					newLeafNode(lv_linkText_1_0, grammarAccess.getClickLinkAccess().getLinkTextSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClickLinkRule());
					}
					setWithLastConsumed(
						$current,
						"linkText",
						lv_linkText_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleClickImage
entryRuleClickImage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClickImageRule()); }
	iv_ruleClickImage=ruleClickImage
	{ $current=$iv_ruleClickImage.current; }
	EOF;

// Rule ClickImage
ruleClickImage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CLICK_IMAGE'
		{
			newLeafNode(otherlv_0, grammarAccess.getClickImageAccess().getCLICK_IMAGEKeyword_0());
		}
		(
			(
				lv_altText_1_0=RULE_STRING
				{
					newLeafNode(lv_altText_1_0, grammarAccess.getClickImageAccess().getAltTextSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClickImageRule());
					}
					setWithLastConsumed(
						$current,
						"altText",
						lv_altText_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleVerifyLink
entryRuleVerifyLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVerifyLinkRule()); }
	iv_ruleVerifyLink=ruleVerifyLink
	{ $current=$iv_ruleVerifyLink.current; }
	EOF;

// Rule VerifyLink
ruleVerifyLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='VERIFY_LINK'
		{
			newLeafNode(otherlv_0, grammarAccess.getVerifyLinkAccess().getVERIFY_LINKKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVerifyLinkAccess().getTextsTextPartParserRuleCall_1_0());
				}
				lv_texts_1_0=ruleTextPart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVerifyLinkRule());
					}
					add(
						$current,
						"texts",
						lv_texts_1_0,
						"fr.imt.bertin.dala.project.Browser.TextPart");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getVerifyLinkAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVerifyLinkAccess().getTextsTextPartParserRuleCall_2_1_0());
					}
					lv_texts_3_0=ruleTextPart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVerifyLinkRule());
						}
						add(
							$current,
							"texts",
							lv_texts_3_0,
							"fr.imt.bertin.dala.project.Browser.TextPart");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFillText
entryRuleFillText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFillTextRule()); }
	iv_ruleFillText=ruleFillText
	{ $current=$iv_ruleFillText.current; }
	EOF;

// Rule FillText
ruleFillText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FILL_TEXT'
		{
			newLeafNode(otherlv_0, grammarAccess.getFillTextAccess().getFILL_TEXTKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFillTextAccess().getTextTextPartParserRuleCall_1_0());
				}
				lv_text_1_0=ruleTextPart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFillTextRule());
					}
					set(
						$current,
						"text",
						lv_text_1_0,
						"fr.imt.bertin.dala.project.Browser.TextPart");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='INTO'
		{
			newLeafNode(otherlv_2, grammarAccess.getFillTextAccess().getINTOKeyword_2());
		}
		(
			(
				lv_field_3_0=RULE_STRING
				{
					newLeafNode(lv_field_3_0, grammarAccess.getFillTextAccess().getFieldSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFillTextRule());
					}
					setWithLastConsumed(
						$current,
						"field",
						lv_field_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleClickButton
entryRuleClickButton returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClickButtonRule()); }
	iv_ruleClickButton=ruleClickButton
	{ $current=$iv_ruleClickButton.current; }
	EOF;

// Rule ClickButton
ruleClickButton returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CLICK_BUTTON'
		{
			newLeafNode(otherlv_0, grammarAccess.getClickButtonAccess().getCLICK_BUTTONKeyword_0());
		}
		(
			(
				lv_buttonText_1_0=RULE_STRING
				{
					newLeafNode(lv_buttonText_1_0, grammarAccess.getClickButtonAccess().getButtonTextSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClickButtonRule());
					}
					setWithLastConsumed(
						$current,
						"buttonText",
						lv_buttonText_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleVerifyText
entryRuleVerifyText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVerifyTextRule()); }
	iv_ruleVerifyText=ruleVerifyText
	{ $current=$iv_ruleVerifyText.current; }
	EOF;

// Rule VerifyText
ruleVerifyText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='VERIFY_TEXT'
		{
			newLeafNode(otherlv_0, grammarAccess.getVerifyTextAccess().getVERIFY_TEXTKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVerifyTextAccess().getTextsTextPartParserRuleCall_1_0());
				}
				lv_texts_1_0=ruleTextPart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVerifyTextRule());
					}
					add(
						$current,
						"texts",
						lv_texts_1_0,
						"fr.imt.bertin.dala.project.Browser.TextPart");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getVerifyTextAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVerifyTextAccess().getTextsTextPartParserRuleCall_2_1_0());
					}
					lv_texts_3_0=ruleTextPart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVerifyTextRule());
						}
						add(
							$current,
							"texts",
							lv_texts_3_0,
							"fr.imt.bertin.dala.project.Browser.TextPart");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSelectOption
entryRuleSelectOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectOptionRule()); }
	iv_ruleSelectOption=ruleSelectOption
	{ $current=$iv_ruleSelectOption.current; }
	EOF;

// Rule SelectOption
ruleSelectOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SELECT_OPTION'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectOptionAccess().getSELECT_OPTIONKeyword_0());
		}
		(
			(
				lv_linkText_1_0=RULE_STRING
				{
					newLeafNode(lv_linkText_1_0, grammarAccess.getSelectOptionAccess().getLinkTextSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectOptionRule());
					}
					setWithLastConsumed(
						$current,
						"linkText",
						lv_linkText_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleUncheckAllCheckboxes
entryRuleUncheckAllCheckboxes returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUncheckAllCheckboxesRule()); }
	iv_ruleUncheckAllCheckboxes=ruleUncheckAllCheckboxes
	{ $current=$iv_ruleUncheckAllCheckboxes.current.getText(); }
	EOF;

// Rule UncheckAllCheckboxes
ruleUncheckAllCheckboxes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='UNCHECK_ALL_CHECKBOXES'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getUncheckAllCheckboxesAccess().getUNCHECK_ALL_CHECKBOXESKeyword());
	}
;

// Entry rule entryRuleCheckCheckboxes
entryRuleCheckCheckboxes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckCheckboxesRule()); }
	iv_ruleCheckCheckboxes=ruleCheckCheckboxes
	{ $current=$iv_ruleCheckCheckboxes.current; }
	EOF;

// Rule CheckCheckboxes
ruleCheckCheckboxes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CHECK_CHECKBOXES'
		{
			newLeafNode(otherlv_0, grammarAccess.getCheckCheckboxesAccess().getCHECK_CHECKBOXESKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getCheckCheckboxesAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				lv_items_2_0=RULE_STRING
				{
					newLeafNode(lv_items_2_0, grammarAccess.getCheckCheckboxesAccess().getItemsSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCheckCheckboxesRule());
					}
					addWithLastConsumed(
						$current,
						"items",
						lv_items_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getCheckCheckboxesAccess().getCommaKeyword_3_0());
			}
			(
				(
					lv_items_4_0=RULE_STRING
					{
						newLeafNode(lv_items_4_0, grammarAccess.getCheckCheckboxesAccess().getItemsSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCheckCheckboxesRule());
						}
						addWithLastConsumed(
							$current,
							"items",
							lv_items_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getCheckCheckboxesAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSaveLink
entryRuleSaveLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSaveLinkRule()); }
	iv_ruleSaveLink=ruleSaveLink
	{ $current=$iv_ruleSaveLink.current; }
	EOF;

// Rule SaveLink
ruleSaveLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SAVE_LINK'
		{
			newLeafNode(otherlv_0, grammarAccess.getSaveLinkAccess().getSAVE_LINKKeyword_0());
		}
		(
			(
				lv_index_1_0=RULE_INT
				{
					newLeafNode(lv_index_1_0, grammarAccess.getSaveLinkAccess().getIndexINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSaveLinkRule());
					}
					setWithLastConsumed(
						$current,
						"index",
						lv_index_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='INTO'
		{
			newLeafNode(otherlv_2, grammarAccess.getSaveLinkAccess().getINTOKeyword_2());
		}
		(
			(
				lv_container_3_0=RULE_STRING
				{
					newLeafNode(lv_container_3_0, grammarAccess.getSaveLinkAccess().getContainerSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSaveLinkRule());
					}
					setWithLastConsumed(
						$current,
						"container",
						lv_container_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTextPart
entryRuleTextPart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextPartRule()); }
	iv_ruleTextPart=ruleTextPart
	{ $current=$iv_ruleTextPart.current; }
	EOF;

// Rule TextPart
ruleTextPart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTextPartAccess().getStringLiteralParserRuleCall_0());
		}
		this_StringLiteral_0=ruleStringLiteral
		{
			$current = $this_StringLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTextPartAccess().getVariableReferenceParserRuleCall_1());
		}
		this_VariableReference_1=ruleVariableReference
		{
			$current = $this_VariableReference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleVariableReference
entryRuleVariableReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableReferenceRule()); }
	iv_ruleVariableReference=ruleVariableReference
	{ $current=$iv_ruleVariableReference.current; }
	EOF;

// Rule VariableReference
ruleVariableReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getVariableReferenceAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVariableReferenceRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
