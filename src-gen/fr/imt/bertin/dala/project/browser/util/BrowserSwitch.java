/**
 * generated by Xtext 2.36.0
 */
package fr.imt.bertin.dala.project.browser.util;

import fr.imt.bertin.dala.project.browser.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see fr.imt.bertin.dala.project.browser.BrowserPackage
 * @generated
 */
public class BrowserSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static BrowserPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BrowserSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = BrowserPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case BrowserPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.STATEMENT:
      {
        Statement statement = (Statement)theEObject;
        T result = caseStatement(statement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.OPEN_URL:
      {
        OpenUrl openUrl = (OpenUrl)theEObject;
        T result = caseOpenUrl(openUrl);
        if (result == null) result = caseStatement(openUrl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.CLICK_LINK:
      {
        ClickLink clickLink = (ClickLink)theEObject;
        T result = caseClickLink(clickLink);
        if (result == null) result = caseStatement(clickLink);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.CLICK_IMAGE:
      {
        ClickImage clickImage = (ClickImage)theEObject;
        T result = caseClickImage(clickImage);
        if (result == null) result = caseStatement(clickImage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.VERIFY_LINK:
      {
        VerifyLink verifyLink = (VerifyLink)theEObject;
        T result = caseVerifyLink(verifyLink);
        if (result == null) result = caseStatement(verifyLink);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.FILL_TEXT:
      {
        FillText fillText = (FillText)theEObject;
        T result = caseFillText(fillText);
        if (result == null) result = caseStatement(fillText);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.CLICK_BUTTON:
      {
        ClickButton clickButton = (ClickButton)theEObject;
        T result = caseClickButton(clickButton);
        if (result == null) result = caseStatement(clickButton);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.VERIFY_TEXT:
      {
        VerifyText verifyText = (VerifyText)theEObject;
        T result = caseVerifyText(verifyText);
        if (result == null) result = caseStatement(verifyText);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.SELECT_OPTION:
      {
        SelectOption selectOption = (SelectOption)theEObject;
        T result = caseSelectOption(selectOption);
        if (result == null) result = caseStatement(selectOption);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.CHECK_CHECKBOXES:
      {
        CheckCheckboxes checkCheckboxes = (CheckCheckboxes)theEObject;
        T result = caseCheckCheckboxes(checkCheckboxes);
        if (result == null) result = caseStatement(checkCheckboxes);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.SAVE_LINK:
      {
        SaveLink saveLink = (SaveLink)theEObject;
        T result = caseSaveLink(saveLink);
        if (result == null) result = caseStatement(saveLink);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.TEXT_PART:
      {
        TextPart textPart = (TextPart)theEObject;
        T result = caseTextPart(textPart);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.STRING_LITERAL:
      {
        StringLiteral stringLiteral = (StringLiteral)theEObject;
        T result = caseStringLiteral(stringLiteral);
        if (result == null) result = caseTextPart(stringLiteral);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BrowserPackage.VARIABLE_REFERENCE:
      {
        VariableReference variableReference = (VariableReference)theEObject;
        T result = caseVariableReference(variableReference);
        if (result == null) result = caseTextPart(variableReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStatement(Statement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Open Url</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Open Url</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOpenUrl(OpenUrl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Click Link</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Click Link</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClickLink(ClickLink object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Click Image</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Click Image</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClickImage(ClickImage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Verify Link</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Verify Link</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVerifyLink(VerifyLink object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fill Text</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fill Text</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFillText(FillText object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Click Button</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Click Button</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClickButton(ClickButton object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Verify Text</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Verify Text</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVerifyText(VerifyText object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Select Option</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Select Option</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSelectOption(SelectOption object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Check Checkboxes</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Check Checkboxes</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCheckCheckboxes(CheckCheckboxes object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Save Link</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Save Link</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSaveLink(SaveLink object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Text Part</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Text Part</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTextPart(TextPart object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Literal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Literal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringLiteral(StringLiteral object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variable Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variable Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariableReference(VariableReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //BrowserSwitch
